/*
Deployment script for StackOverflow

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "StackOverflow"
:setvar DefaultFilePrefix "StackOverflow"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[DropIndexes]...';


GO

ALTER PROCEDURE [dbo].[DropIndexes] @SchemaName NVARCHAR(255) = 'dbo', 
                                     @TableName  NVARCHAR(255) = NULL
AS
    BEGIN
        SET NOCOUNT ON;
        CREATE TABLE #commands
        (ID      INT IDENTITY(1, 1) PRIMARY KEY CLUSTERED , 
         Command NVARCHAR(2000)
        );
        DECLARE @CurrentCommand NVARCHAR(2000);
        INSERT INTO #commands(#commands.[Command])
               SELECT 'DROP INDEX [' + i.name + '] ON [' + SCHEMA_NAME(t.schema_id) + '].[' + t.name + ']'
               FROM sys.tables t
                    INNER JOIN sys.indexes i ON t.object_id = i.object_id
               WHERE i.type = 2
                     AND SCHEMA_NAME(t.schema_id) = COALESCE(@SchemaName, SCHEMA_NAME(t.schema_id))
                     AND t.name = COALESCE(@TableName, t.name);
        INSERT INTO #commands(#commands.[Command])
               SELECT 'DROP STATISTICS ' + SCHEMA_NAME(t.schema_id) + '.' + OBJECT_NAME(s.object_id) + '.' + s.name
               FROM sys.stats AS s
                    INNER JOIN sys.tables AS t ON s.object_id = t.object_id
               WHERE NOT EXISTS
               (
                   SELECT *
                   FROM sys.indexes AS i
                   WHERE i.name = s.name
               )
                     AND SCHEMA_NAME(t.schema_id) = COALESCE(@SchemaName, SCHEMA_NAME(t.schema_id))
                     AND t.name = COALESCE(@TableName, t.name)
                     AND OBJECT_NAME(s.object_id) NOT LIKE 'sys%';
        DECLARE result_cursor CURSOR
        FOR SELECT #commands.[Command]
            FROM #commands;
        OPEN result_cursor;
        FETCH NEXT FROM result_cursor INTO @CurrentCommand;
        WHILE @@FETCH_STATUS = 0
            BEGIN
                PRINT @CurrentCommand;
                EXEC (@CurrentCommand);
                FETCH NEXT FROM result_cursor INTO @CurrentCommand;
            END;
        --end loop
        --clean up
        CLOSE result_cursor;
        DEALLOCATE result_cursor;
    END;
GO
PRINT N'Creating [dbo].[sp_GetTopUsers]...';


GO
CREATE PROCEDURE [dbo].[sp_GetTopUsers]
	
AS
	SELECT TOP 10 * FROM dbo.Users;
GO
PRINT N'Update complete.';


GO
